
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAND CHAR CHARCTE COMMA COMMENT DIVENT DIVIDE DO ELSE EQ ESDEV FLOAT FLOATCTE FOR FUNCION GT GTE ID IF INT INTEGERCTE LBRACKET LPARENT LSQUARE LT LTE MAIN MEDIA MEDIANA MINUS MODA MODULE NE NEWLINE OR PLUS POWER PROGRAM RBRACKET READ RETURN RPARENT RSQUARE SEMI SIM STRINGCTE THEN TIMES TO VAR VARIANZA VOID WHILE WRITEprograma : PROGRAM ID SEMI vars funcion main\n                | PROGRAM ID SEMI funcion main\n                | PROGRAM ID SEMI vars main\n                | PROGRAM ID SEMI mainmain : MAIN function_name verifica_name LPARENT RPARENT function_all end_mainvars : vars list_vars SEMI\n            | VAR list_vars SEMIlist_vars : list_vars COMMA vars_array\n                 | list_vars COMMA ID vars_name vars_type\n                 | memType vars_array\n                 | memType ID vars_name vars_typevars_array : ID vars_name vars_type LSQUARE const RSQUARE add_memoryfunc_vars : memType ID vars_name vars_type param_type COMMA func_vars\n                 | memType ID vars_name vars_type param_typememType : INT loType\n               | FLOAT loType\n               | CHAR loTypefunction_all : LBRACKET vars statement_func RBRACKET\n                    | LBRACKET vars RBRACKET\n                    | LBRACKET statement_func RBRACKET\n                    | LBRACKET RBRACKETbloque : LBRACKET statement_func RBRACKET\n              | LBRACKET RBRACKETstatement_func : statement statement_func\n                      | statementstatement : statement_assign SEMI\n                 | statement_function SEMI\n                 | statement_condition\n                 | statement_while\n                 | statement_for\n                 | statement_read SEMI\n                 | statement_write SEMI\n                 | statement_return SEMI\n                 | statement_statistics SEMIstatement_assign : ID const_id LSQUARE const save_var RSQUARE EQ opera_add expression add_tabla\n                        | ID const_id EQ opera_add expression add_tablaexpression : ID const_id LSQUARE const save_var RSQUARE\n                  | expr oper_y AND opera_add expression\n                  | expr oper_y expr : expr_aux oper_o OR opera_add expr\n            | expr_aux oper_o expr_aux : expr_sumres expr_rel LT opera_add expr_aux\n                | expr_sumres expr_rel LTE opera_add expr_aux\n                | expr_sumres expr_rel GT opera_add expr_aux\n                | expr_sumres expr_rel GTE opera_add expr_aux\n                | expr_sumres expr_rel SIM opera_add expr_aux\n                | expr_sumres expr_rel NE opera_add expr_aux\n                | expr_sumres expr_rel expr_sumres : expr_muldiv term_sumres PLUS opera_add expr_sumres\n                   | expr_muldiv term_sumres MINUS opera_add expr_sumres\n                   | expr_muldiv term_sumresexpr_muldiv : const term_muldiv TIMES opera_add expr_muldiv\n                   | const term_muldiv DIVENT opera_add expr_muldiv\n                   | const term_muldiv DIVIDE opera_add expr_muldiv\n                   | const term_muldiv MODULE opera_add expr_muldiv\n                   | const term_muldiv POWER opera_add expr_muldiv\n                   | const term_muldivconst : LPARENT fondo_virtual expression RPARENT pop_fondo_virtual\n             | INTEGERCTE const_int\n             | FLOATCTE const_float\n             | CHARCTE const_char\n             | ID const_idfuncion : FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion funcion\n               | FUNCION memType ID function_name parametro rev_quad function_all fin_funcion funcion\n               | FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion\n               | FUNCION memType ID function_name parametro rev_quad function_all fin_funcionparametro : LPARENT func_vars RPARENT\n                 | LPARENT RPARENTstatement_function : ID existe_funcion crea_funcion LPARENT funcion_aux verifica_param RPARENT crea_subfuncion\n                          | ID existe_funcion crea_funcion LPARENT RPARENT crea_subfuncionfuncion_aux : expression revisar_parametro\n                   | expression revisar_parametro cuenta_parametro COMMA funcion_auxstatement_condition : IF LPARENT expression RPARENT THEN revisar_expression bloque ELSE else_expression bloque condition_end\n                           | IF LPARENT expression RPARENT THEN revisar_expression bloque condition_endstatement_while : WHILE opera_while LPARENT expression RPARENT condicion_while DO bloque loop_whilestatement_for : FOR opera_for statement_assign TO const compara_for condicion_for DO bloque aumenta loop_forstatement_read : READ LPARENT read_1 RPARENTread_1 : ID read_instr read_1\n              | ID read_instrstatement_write : WRITE LPARENT write_1 RPARENTwrite_1 : expression write_instr COMMA write_1\n               | STRINGCTE const_str write_instr COMMA write_1\n               | expression write_instr\n               | STRINGCTE const_str write_instrstatement_return : RETURN return_function LPARENT expression RPARENT return_save_quadruplestatement_statistics : MEDIA LPARENT const read_arg_mean RPARENT\n                            | MEDIANA LPARENT const read_arg_median RPARENT\n                            | MODA LPARENT const read_arg_mode RPARENT\n                            | VARIANZA LPARENT const read_arg_varianza RPARENT\n                            | ESDEV LPARENT const read_arg_esdev RPARENTloType : vars_name : vars_type : add_memory : const_id : const_int : const_float : const_char : const_str : add_tabla : save_var : opera_add : term_sumres : term_muldiv : expr_rel : oper_o : oper_y : fondo_virtual : pop_fondo_virtual : verifica_name : param_type : rev_quad : function_name : fin_funcion : existe_funcion : crea_funcion : crea_subfuncion : verifica_param : cuenta_parametro : revisar_parametro : revisar_expression : else_expression : condition_end : opera_while : condicion_while : loop_while : opera_for : compara_for : condicion_for : aumenta : loop_for : read_arg_mean : read_arg_median : read_arg_mode : read_arg_varianza : read_arg_esdev : read_instr : write_instr : return_function : return_save_quadruple : end_main : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,12,18,23,54,66,69,102,103,135,],[0,-4,-3,-2,-1,-141,-5,-21,-19,-20,-18,]),'ID':([2,14,15,16,17,20,21,24,25,28,29,30,31,32,48,53,55,58,67,70,73,74,75,83,94,105,106,107,108,109,110,113,115,116,117,119,120,121,122,123,136,137,140,144,148,164,165,168,170,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,207,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,241,259,262,263,268,270,272,274,275,280,281,282,284,285,286,287,],[3,27,-91,-91,-91,-91,33,-6,36,-15,-16,-17,-7,38,56,65,80,-108,80,80,-28,-29,-30,-127,126,-26,-27,-31,-32,-33,-34,126,142,144,126,56,56,56,56,56,56,-102,126,-137,126,126,126,56,144,56,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,126,56,56,56,56,56,126,56,56,56,56,56,56,56,56,56,126,-102,-123,80,126,126,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'SEMI':([3,13,19,26,27,35,36,37,41,42,47,56,59,60,61,71,72,76,77,78,79,92,93,95,96,97,124,126,127,128,129,130,131,154,155,156,157,158,159,160,169,171,180,199,201,209,210,211,212,213,214,233,235,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,267,269,277,283,],[4,24,31,-10,-92,-8,-92,-93,-93,-11,-9,-95,-96,-97,-98,105,106,107,108,109,110,-62,-94,-59,-60,-61,-12,-95,-104,-107,-106,-105,-103,-109,-62,-57,-39,-41,-48,-51,-77,-80,-58,-100,-117,-140,-86,-87,-88,-89,-90,-36,-70,-85,-52,-53,-54,-55,-56,-38,-40,-42,-43,-44,-45,-46,-47,-49,-50,-117,-37,-69,-100,-35,]),'VAR':([4,55,],[8,8,]),'FUNCION':([4,5,24,31,63,69,98,99,102,103,132,135,],[9,9,-6,-7,-114,-21,-114,9,-19,-20,9,-18,]),'MAIN':([4,5,6,11,24,31,63,69,98,99,102,103,132,133,135,161,],[10,10,10,10,-6,-7,-114,-21,-114,-66,-19,-20,-65,-64,-18,-63,]),'INT':([5,8,9,24,31,45,67,197,],[15,15,15,-6,-7,15,15,15,]),'FLOAT':([5,8,9,24,31,45,67,197,],[16,16,16,-6,-7,16,16,16,]),'CHAR':([5,8,9,24,31,45,67,197,],[17,17,17,-6,-7,17,17,17,]),'VOID':([9,],[20,]),'LPARENT':([10,22,33,34,38,39,43,48,58,80,81,82,84,85,86,87,88,89,90,91,94,112,113,114,117,118,119,120,121,122,123,136,137,138,140,148,164,165,168,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,207,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,241,259,268,270,],[-113,-110,-113,40,-113,45,45,58,-108,-115,113,-124,116,117,-139,119,120,121,122,123,58,-116,58,140,58,148,58,58,58,58,58,58,-102,165,58,58,58,58,58,58,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-102,58,58,]),'COMMA':([13,19,26,27,35,36,37,41,42,47,56,59,60,61,65,92,93,95,96,97,100,124,126,127,128,129,130,131,134,146,147,154,155,156,157,158,159,160,162,172,173,180,202,208,236,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,267,],[25,25,-10,-92,-8,-92,-93,-93,-11,-9,-95,-96,-97,-98,-92,-62,-94,-59,-60,-61,-93,-12,-95,-104,-107,-106,-105,-103,-111,-138,-99,-109,-62,-57,-39,-41,-48,-51,197,207,-138,-58,-120,241,-119,-52,-53,-54,-55,-56,-38,-40,-42,-43,-44,-45,-46,-47,-49,-50,270,-37,]),'RBRACKET':([24,31,55,67,68,70,73,74,75,101,104,105,106,107,108,109,110,262,263,272,273,274,275,280,281,282,284,285,286,287,],[-6,-7,69,102,103,-25,-28,-29,-30,135,-24,-26,-27,-31,-32,-33,-34,-123,274,-74,280,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'IF':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,81,81,81,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,81,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'WHILE':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,82,82,82,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,82,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'FOR':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,83,83,83,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,83,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'READ':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,84,84,84,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,84,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'WRITE':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,85,85,85,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,85,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'RETURN':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,86,86,86,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,86,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'MEDIA':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,87,87,87,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,87,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'MEDIANA':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,88,88,88,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,88,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'MODA':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,89,89,89,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,89,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'VARIANZA':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,90,90,90,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,90,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'ESDEV':([24,31,55,67,70,73,74,75,105,106,107,108,109,110,262,263,272,274,275,280,281,282,284,285,286,287,],[-6,-7,91,91,91,-28,-29,-30,-26,-27,-31,-32,-33,-34,-123,91,-74,-23,-126,-22,-75,-130,-123,-131,-73,-76,]),'LSQUARE':([27,36,37,41,42,47,80,111,126,142,155,],[-92,-92,-93,-93,48,48,-95,136,-95,-95,181,]),'RPARENT':([40,45,51,56,59,60,61,65,92,95,96,97,100,125,126,127,128,129,130,131,134,139,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,165,167,170,172,173,174,175,176,177,178,179,180,200,202,206,208,231,234,236,240,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,266,267,278,],[46,52,64,-95,-96,-97,-98,-92,-62,-59,-60,-61,-93,154,-95,-104,-107,-106,-105,-103,-111,166,169,-137,171,-138,-99,-132,-133,-134,-135,-136,-109,-62,-57,-39,-41,-48,-51,-14,201,204,-79,-83,-138,209,210,211,212,213,214,-58,-118,-120,-78,-84,-13,260,-71,-81,-52,-53,-54,-55,-56,-38,-40,-42,-43,-44,-45,-46,-47,-49,-50,-82,-37,-72,]),'LBRACKET':([44,46,49,50,52,62,64,203,237,264,271,276,279,],[-112,55,-112,55,-68,55,-67,-121,263,263,-122,263,263,]),'INTEGERCTE':([48,58,94,113,117,119,120,121,122,123,136,137,140,148,164,165,168,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,207,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,241,259,268,270,],[59,-108,59,59,59,59,59,59,59,59,59,-102,59,59,59,59,59,59,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-102,59,59,]),'FLOATCTE':([48,58,94,113,117,119,120,121,122,123,136,137,140,148,164,165,168,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,207,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,241,259,268,270,],[60,-108,60,60,60,60,60,60,60,60,60,-102,60,60,60,60,60,60,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-102,60,60,]),'CHARCTE':([48,58,94,113,117,119,120,121,122,123,136,137,140,148,164,165,168,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,207,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,241,259,268,270,],[61,-108,61,61,61,61,61,61,61,61,61,-102,61,61,61,61,61,61,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-102,61,61,]),'RSQUARE':([56,57,59,60,61,92,95,96,97,154,163,180,198,215,243,],[-95,93,-96,-97,-98,-62,-59,-60,-61,-109,-101,-58,232,-101,267,]),'DO':([56,59,60,61,92,95,96,97,154,180,204,205,238,239,265,],[-95,-96,-97,-98,-62,-59,-60,-61,-109,-58,-125,-128,264,-129,276,]),'TIMES':([56,59,60,61,92,95,96,97,126,127,154,155,156,180,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-109,-62,182,-58,]),'DIVENT':([56,59,60,61,92,95,96,97,126,127,154,155,156,180,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-109,-62,183,-58,]),'DIVIDE':([56,59,60,61,92,95,96,97,126,127,154,155,156,180,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-109,-62,184,-58,]),'MODULE':([56,59,60,61,92,95,96,97,126,127,154,155,156,180,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-109,-62,185,-58,]),'POWER':([56,59,60,61,92,95,96,97,126,127,154,155,156,180,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-109,-62,186,-58,]),'PLUS':([56,59,60,61,92,95,96,97,126,127,131,154,155,156,160,180,244,245,246,247,248,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-103,-109,-62,-57,195,-58,-52,-53,-54,-55,-56,]),'MINUS':([56,59,60,61,92,95,96,97,126,127,131,154,155,156,160,180,244,245,246,247,248,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-103,-109,-62,-57,196,-58,-52,-53,-54,-55,-56,]),'LT':([56,59,60,61,92,95,96,97,126,127,130,131,154,155,156,159,160,180,244,245,246,247,248,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-105,-103,-109,-62,-57,189,-51,-58,-52,-53,-54,-55,-56,-49,-50,]),'LTE':([56,59,60,61,92,95,96,97,126,127,130,131,154,155,156,159,160,180,244,245,246,247,248,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-105,-103,-109,-62,-57,190,-51,-58,-52,-53,-54,-55,-56,-49,-50,]),'GT':([56,59,60,61,92,95,96,97,126,127,130,131,154,155,156,159,160,180,244,245,246,247,248,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-105,-103,-109,-62,-57,191,-51,-58,-52,-53,-54,-55,-56,-49,-50,]),'GTE':([56,59,60,61,92,95,96,97,126,127,130,131,154,155,156,159,160,180,244,245,246,247,248,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-105,-103,-109,-62,-57,192,-51,-58,-52,-53,-54,-55,-56,-49,-50,]),'SIM':([56,59,60,61,92,95,96,97,126,127,130,131,154,155,156,159,160,180,244,245,246,247,248,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-105,-103,-109,-62,-57,193,-51,-58,-52,-53,-54,-55,-56,-49,-50,]),'NE':([56,59,60,61,92,95,96,97,126,127,130,131,154,155,156,159,160,180,244,245,246,247,248,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-105,-103,-109,-62,-57,194,-51,-58,-52,-53,-54,-55,-56,-49,-50,]),'OR':([56,59,60,61,92,95,96,97,126,127,129,130,131,154,155,156,158,159,160,180,244,245,246,247,248,251,252,253,254,255,256,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-106,-105,-103,-109,-62,-57,188,-48,-51,-58,-52,-53,-54,-55,-56,-42,-43,-44,-45,-46,-47,-49,-50,]),'AND':([56,59,60,61,92,95,96,97,126,127,128,129,130,131,154,155,156,157,158,159,160,180,244,245,246,247,248,250,251,252,253,254,255,256,257,258,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-107,-106,-105,-103,-109,-62,-57,187,-41,-48,-51,-58,-52,-53,-54,-55,-56,-40,-42,-43,-44,-45,-46,-47,-49,-50,]),'TO':([56,59,60,61,92,95,96,97,126,127,128,129,130,131,141,154,155,156,157,158,159,160,180,199,233,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,267,277,283,],[-95,-96,-97,-98,-62,-59,-60,-61,-95,-104,-107,-106,-105,-103,168,-109,-62,-57,-39,-41,-48,-51,-58,-100,-36,-52,-53,-54,-55,-56,-38,-40,-42,-43,-44,-45,-46,-47,-49,-50,-37,-100,-35,]),'EQ':([80,111,142,232,],[-95,137,-95,259,]),'STRINGCTE':([117,207,241,],[147,147,147,]),'THEN':([166,],[203,]),'ELSE':([262,274,280,],[271,-23,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([4,55,],[5,67,]),'funcion':([4,5,99,132,],[6,11,133,161,]),'main':([4,5,6,11,],[7,12,18,23,]),'list_vars':([5,8,67,],[13,19,13,]),'memType':([5,8,9,45,67,197,],[14,14,21,53,14,53,]),'function_name':([10,33,38,],[22,39,43,]),'vars_array':([14,25,],[26,35,]),'loType':([15,16,17,20,],[28,29,30,32,]),'verifica_name':([22,],[34,]),'vars_name':([27,36,65,],[37,41,100,]),'vars_type':([37,41,100,],[42,47,134,]),'parametro':([39,43,],[44,49,]),'rev_quad':([44,49,],[50,62,]),'func_vars':([45,197,],[51,231,]),'function_all':([46,50,62,],[54,63,98,]),'const':([48,94,113,117,119,120,121,122,123,136,140,148,164,165,168,181,207,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,241,268,270,],[57,127,127,127,149,150,151,152,153,163,127,127,127,127,205,215,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'end_main':([54,],[66,]),'statement_func':([55,67,70,263,],[68,101,104,273,]),'statement':([55,67,70,263,],[70,70,70,70,]),'statement_assign':([55,67,70,115,263,],[71,71,71,141,71,]),'statement_function':([55,67,70,263,],[72,72,72,72,]),'statement_condition':([55,67,70,263,],[73,73,73,73,]),'statement_while':([55,67,70,263,],[74,74,74,74,]),'statement_for':([55,67,70,263,],[75,75,75,75,]),'statement_read':([55,67,70,263,],[76,76,76,76,]),'statement_write':([55,67,70,263,],[77,77,77,77,]),'statement_return':([55,67,70,263,],[78,78,78,78,]),'statement_statistics':([55,67,70,263,],[79,79,79,79,]),'const_id':([56,80,126,142,],[92,111,155,111,]),'fondo_virtual':([58,],[94,]),'const_int':([59,],[95,]),'const_float':([60,],[96,]),'const_char':([61,],[97,]),'fin_funcion':([63,98,],[99,132,]),'existe_funcion':([80,],[112,]),'opera_while':([82,],[114,]),'opera_for':([83,],[115,]),'return_function':([86,],[118,]),'add_memory':([93,],[124,]),'expression':([94,113,117,140,148,164,165,207,221,241,268,270,],[125,139,146,167,174,199,202,146,249,146,277,202,]),'expr':([94,113,117,140,148,164,165,207,221,222,241,268,270,],[128,128,128,128,128,128,128,128,128,250,128,128,128,]),'expr_aux':([94,113,117,140,148,164,165,207,221,222,223,224,225,226,227,228,241,268,270,],[129,129,129,129,129,129,129,129,129,129,251,252,253,254,255,256,129,129,129,]),'expr_sumres':([94,113,117,140,148,164,165,207,221,222,223,224,225,226,227,228,229,230,241,268,270,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,257,258,130,130,130,]),'expr_muldiv':([94,113,117,140,148,164,165,207,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,241,268,270,],[131,131,131,131,131,131,131,131,244,245,246,247,248,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'crea_funcion':([112,],[138,]),'read_1':([116,170,],[143,206,]),'write_1':([117,207,241,],[145,240,266,]),'term_muldiv':([127,],[156,]),'oper_y':([128,],[157,]),'oper_o':([129,],[158,]),'expr_rel':([130,],[159,]),'term_sumres':([131,],[160,]),'param_type':([134,],[162,]),'opera_add':([137,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,259,],[164,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,268,]),'read_instr':([144,],[170,]),'write_instr':([146,173,],[172,208,]),'const_str':([147,],[173,]),'read_arg_mean':([149,],[175,]),'read_arg_median':([150,],[176,]),'read_arg_mode':([151,],[177,]),'read_arg_varianza':([152,],[178,]),'read_arg_esdev':([153,],[179,]),'pop_fondo_virtual':([154,],[180,]),'save_var':([163,215,],[198,243,]),'funcion_aux':([165,270,],[200,278,]),'add_tabla':([199,277,],[233,283,]),'verifica_param':([200,],[234,]),'crea_subfuncion':([201,260,],[235,269,]),'revisar_parametro':([202,],[236,]),'revisar_expression':([203,],[237,]),'condicion_while':([204,],[238,]),'compara_for':([205,],[239,]),'return_save_quadruple':([209,],[242,]),'cuenta_parametro':([236,],[261,]),'bloque':([237,264,276,279,],[262,275,282,284,]),'condicion_for':([239,],[265,]),'condition_end':([262,284,],[272,286,]),'else_expression':([271,],[279,]),'loop_while':([275,],[281,]),'aumenta':([282,],[285,]),'loop_for':([285,],[287,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMI vars funcion main','programa',6,'p_programa','MyRParse.py',51),
  ('programa -> PROGRAM ID SEMI funcion main','programa',5,'p_programa','MyRParse.py',52),
  ('programa -> PROGRAM ID SEMI vars main','programa',5,'p_programa','MyRParse.py',53),
  ('programa -> PROGRAM ID SEMI main','programa',4,'p_programa','MyRParse.py',54),
  ('main -> MAIN function_name verifica_name LPARENT RPARENT function_all end_main','main',7,'p_main','MyRParse.py',58),
  ('vars -> vars list_vars SEMI','vars',3,'p_vars','MyRParse.py',61),
  ('vars -> VAR list_vars SEMI','vars',3,'p_vars','MyRParse.py',62),
  ('list_vars -> list_vars COMMA vars_array','list_vars',3,'p_list_vars','MyRParse.py',65),
  ('list_vars -> list_vars COMMA ID vars_name vars_type','list_vars',5,'p_list_vars','MyRParse.py',66),
  ('list_vars -> memType vars_array','list_vars',2,'p_list_vars','MyRParse.py',67),
  ('list_vars -> memType ID vars_name vars_type','list_vars',4,'p_list_vars','MyRParse.py',68),
  ('vars_array -> ID vars_name vars_type LSQUARE const RSQUARE add_memory','vars_array',7,'p_vars_array','MyRParse.py',71),
  ('func_vars -> memType ID vars_name vars_type param_type COMMA func_vars','func_vars',7,'p_func_vars','MyRParse.py',74),
  ('func_vars -> memType ID vars_name vars_type param_type','func_vars',5,'p_func_vars','MyRParse.py',75),
  ('memType -> INT loType','memType',2,'p_memType','MyRParse.py',78),
  ('memType -> FLOAT loType','memType',2,'p_memType','MyRParse.py',79),
  ('memType -> CHAR loType','memType',2,'p_memType','MyRParse.py',80),
  ('function_all -> LBRACKET vars statement_func RBRACKET','function_all',4,'p_function_all','MyRParse.py',83),
  ('function_all -> LBRACKET vars RBRACKET','function_all',3,'p_function_all','MyRParse.py',84),
  ('function_all -> LBRACKET statement_func RBRACKET','function_all',3,'p_function_all','MyRParse.py',85),
  ('function_all -> LBRACKET RBRACKET','function_all',2,'p_function_all','MyRParse.py',86),
  ('bloque -> LBRACKET statement_func RBRACKET','bloque',3,'p_bloque','MyRParse.py',89),
  ('bloque -> LBRACKET RBRACKET','bloque',2,'p_bloque','MyRParse.py',90),
  ('statement_func -> statement statement_func','statement_func',2,'p_statement_func','MyRParse.py',93),
  ('statement_func -> statement','statement_func',1,'p_statement_func','MyRParse.py',94),
  ('statement -> statement_assign SEMI','statement',2,'p_statement','MyRParse.py',97),
  ('statement -> statement_function SEMI','statement',2,'p_statement','MyRParse.py',98),
  ('statement -> statement_condition','statement',1,'p_statement','MyRParse.py',99),
  ('statement -> statement_while','statement',1,'p_statement','MyRParse.py',100),
  ('statement -> statement_for','statement',1,'p_statement','MyRParse.py',101),
  ('statement -> statement_read SEMI','statement',2,'p_statement','MyRParse.py',102),
  ('statement -> statement_write SEMI','statement',2,'p_statement','MyRParse.py',103),
  ('statement -> statement_return SEMI','statement',2,'p_statement','MyRParse.py',104),
  ('statement -> statement_statistics SEMI','statement',2,'p_statement','MyRParse.py',105),
  ('statement_assign -> ID const_id LSQUARE const save_var RSQUARE EQ opera_add expression add_tabla','statement_assign',10,'p_statement_assign','MyRParse.py',108),
  ('statement_assign -> ID const_id EQ opera_add expression add_tabla','statement_assign',6,'p_statement_assign','MyRParse.py',109),
  ('expression -> ID const_id LSQUARE const save_var RSQUARE','expression',6,'p_expression','MyRParse.py',112),
  ('expression -> expr oper_y AND opera_add expression','expression',5,'p_expression','MyRParse.py',113),
  ('expression -> expr oper_y','expression',2,'p_expression','MyRParse.py',114),
  ('expr -> expr_aux oper_o OR opera_add expr','expr',5,'p_expr','MyRParse.py',117),
  ('expr -> expr_aux oper_o','expr',2,'p_expr','MyRParse.py',118),
  ('expr_aux -> expr_sumres expr_rel LT opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',121),
  ('expr_aux -> expr_sumres expr_rel LTE opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',122),
  ('expr_aux -> expr_sumres expr_rel GT opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',123),
  ('expr_aux -> expr_sumres expr_rel GTE opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',124),
  ('expr_aux -> expr_sumres expr_rel SIM opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',125),
  ('expr_aux -> expr_sumres expr_rel NE opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',126),
  ('expr_aux -> expr_sumres expr_rel','expr_aux',2,'p_expr_aux','MyRParse.py',127),
  ('expr_sumres -> expr_muldiv term_sumres PLUS opera_add expr_sumres','expr_sumres',5,'p_expr_sumres','MyRParse.py',130),
  ('expr_sumres -> expr_muldiv term_sumres MINUS opera_add expr_sumres','expr_sumres',5,'p_expr_sumres','MyRParse.py',131),
  ('expr_sumres -> expr_muldiv term_sumres','expr_sumres',2,'p_expr_sumres','MyRParse.py',132),
  ('expr_muldiv -> const term_muldiv TIMES opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',135),
  ('expr_muldiv -> const term_muldiv DIVENT opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',136),
  ('expr_muldiv -> const term_muldiv DIVIDE opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',137),
  ('expr_muldiv -> const term_muldiv MODULE opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',138),
  ('expr_muldiv -> const term_muldiv POWER opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',139),
  ('expr_muldiv -> const term_muldiv','expr_muldiv',2,'p_expr_muldiv','MyRParse.py',140),
  ('const -> LPARENT fondo_virtual expression RPARENT pop_fondo_virtual','const',5,'p_const','MyRParse.py',143),
  ('const -> INTEGERCTE const_int','const',2,'p_const','MyRParse.py',144),
  ('const -> FLOATCTE const_float','const',2,'p_const','MyRParse.py',145),
  ('const -> CHARCTE const_char','const',2,'p_const','MyRParse.py',146),
  ('const -> ID const_id','const',2,'p_const','MyRParse.py',147),
  ('funcion -> FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion funcion','funcion',10,'p_funcion','MyRParse.py',150),
  ('funcion -> FUNCION memType ID function_name parametro rev_quad function_all fin_funcion funcion','funcion',9,'p_funcion','MyRParse.py',151),
  ('funcion -> FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion','funcion',9,'p_funcion','MyRParse.py',152),
  ('funcion -> FUNCION memType ID function_name parametro rev_quad function_all fin_funcion','funcion',8,'p_funcion','MyRParse.py',153),
  ('parametro -> LPARENT func_vars RPARENT','parametro',3,'p_parametro','MyRParse.py',156),
  ('parametro -> LPARENT RPARENT','parametro',2,'p_parametro','MyRParse.py',157),
  ('statement_function -> ID existe_funcion crea_funcion LPARENT funcion_aux verifica_param RPARENT crea_subfuncion','statement_function',8,'p_statement_function','MyRParse.py',160),
  ('statement_function -> ID existe_funcion crea_funcion LPARENT RPARENT crea_subfuncion','statement_function',6,'p_statement_function','MyRParse.py',161),
  ('funcion_aux -> expression revisar_parametro','funcion_aux',2,'p_funcion_aux','MyRParse.py',164),
  ('funcion_aux -> expression revisar_parametro cuenta_parametro COMMA funcion_aux','funcion_aux',5,'p_funcion_aux','MyRParse.py',165),
  ('statement_condition -> IF LPARENT expression RPARENT THEN revisar_expression bloque ELSE else_expression bloque condition_end','statement_condition',11,'p_statement_condition','MyRParse.py',168),
  ('statement_condition -> IF LPARENT expression RPARENT THEN revisar_expression bloque condition_end','statement_condition',8,'p_statement_condition','MyRParse.py',169),
  ('statement_while -> WHILE opera_while LPARENT expression RPARENT condicion_while DO bloque loop_while','statement_while',9,'p_statement_while','MyRParse.py',172),
  ('statement_for -> FOR opera_for statement_assign TO const compara_for condicion_for DO bloque aumenta loop_for','statement_for',11,'p_statement_for','MyRParse.py',175),
  ('statement_read -> READ LPARENT read_1 RPARENT','statement_read',4,'p_statement_read','MyRParse.py',178),
  ('read_1 -> ID read_instr read_1','read_1',3,'p_read_1','MyRParse.py',181),
  ('read_1 -> ID read_instr','read_1',2,'p_read_1','MyRParse.py',182),
  ('statement_write -> WRITE LPARENT write_1 RPARENT','statement_write',4,'p_statement_write','MyRParse.py',185),
  ('write_1 -> expression write_instr COMMA write_1','write_1',4,'p_write_1','MyRParse.py',188),
  ('write_1 -> STRINGCTE const_str write_instr COMMA write_1','write_1',5,'p_write_1','MyRParse.py',189),
  ('write_1 -> expression write_instr','write_1',2,'p_write_1','MyRParse.py',190),
  ('write_1 -> STRINGCTE const_str write_instr','write_1',3,'p_write_1','MyRParse.py',191),
  ('statement_return -> RETURN return_function LPARENT expression RPARENT return_save_quadruple','statement_return',6,'p_statement_return','MyRParse.py',194),
  ('statement_statistics -> MEDIA LPARENT const read_arg_mean RPARENT','statement_statistics',5,'p_statement_statistics','MyRParse.py',197),
  ('statement_statistics -> MEDIANA LPARENT const read_arg_median RPARENT','statement_statistics',5,'p_statement_statistics','MyRParse.py',198),
  ('statement_statistics -> MODA LPARENT const read_arg_mode RPARENT','statement_statistics',5,'p_statement_statistics','MyRParse.py',199),
  ('statement_statistics -> VARIANZA LPARENT const read_arg_varianza RPARENT','statement_statistics',5,'p_statement_statistics','MyRParse.py',200),
  ('statement_statistics -> ESDEV LPARENT const read_arg_esdev RPARENT','statement_statistics',5,'p_statement_statistics','MyRParse.py',201),
  ('loType -> <empty>','loType',0,'p_loType','MyRParse.py',206),
  ('vars_name -> <empty>','vars_name',0,'p_vars_name','MyRParse.py',212),
  ('vars_type -> <empty>','vars_type',0,'p_vars_type','MyRParse.py',230),
  ('add_memory -> <empty>','add_memory',0,'p_add_memory','MyRParse.py',238),
  ('const_id -> <empty>','const_id',0,'p_const_id','MyRParse.py',286),
  ('const_int -> <empty>','const_int',0,'p_const_int','MyRParse.py',292),
  ('const_float -> <empty>','const_float',0,'p_const_float','MyRParse.py',303),
  ('const_char -> <empty>','const_char',0,'p_const_char','MyRParse.py',314),
  ('const_str -> <empty>','const_str',0,'p_const_str','MyRParse.py',327),
  ('add_tabla -> <empty>','add_tabla',0,'p_add_tabla','MyRParse.py',340),
  ('save_var -> <empty>','save_var',0,'p_save_var','MyRParse.py',354),
  ('opera_add -> <empty>','opera_add',0,'p_opera_add','MyRParse.py',365),
  ('term_sumres -> <empty>','term_sumres',0,'p_term_sumres','MyRParse.py',371),
  ('term_muldiv -> <empty>','term_muldiv',0,'p_term_muldiv','MyRParse.py',375),
  ('expr_rel -> <empty>','expr_rel',0,'p_expr_rel','MyRParse.py',379),
  ('oper_o -> <empty>','oper_o',0,'p_oper_o','MyRParse.py',383),
  ('oper_y -> <empty>','oper_y',0,'p_oper_y','MyRParse.py',387),
  ('fondo_virtual -> <empty>','fondo_virtual',0,'p_fondo_virtual','MyRParse.py',391),
  ('pop_fondo_virtual -> <empty>','pop_fondo_virtual',0,'p_pop_fondo_virtual','MyRParse.py',396),
  ('verifica_name -> <empty>','verifica_name',0,'p_verifica_name','MyRParse.py',423),
  ('param_type -> <empty>','param_type',0,'p_param_type','MyRParse.py',429),
  ('rev_quad -> <empty>','rev_quad',0,'p_rev_quad','MyRParse.py',435),
  ('function_name -> <empty>','function_name',0,'p_function_name','MyRParse.py',439),
  ('fin_funcion -> <empty>','fin_funcion',0,'p_fin_funcion','MyRParse.py',466),
  ('existe_funcion -> <empty>','existe_funcion',0,'p_existe_funcion','MyRParse.py',478),
  ('crea_funcion -> <empty>','crea_funcion',0,'p_crea_funcion','MyRParse.py',485),
  ('crea_subfuncion -> <empty>','crea_subfuncion',0,'p_crea_subfuncion','MyRParse.py',492),
  ('verifica_param -> <empty>','verifica_param',0,'p_verifica_param','MyRParse.py',498),
  ('cuenta_parametro -> <empty>','cuenta_parametro',0,'p_cuenta_parametro','MyRParse.py',505),
  ('revisar_parametro -> <empty>','revisar_parametro',0,'p_revisar_parametro','MyRParse.py',510),
  ('revisar_expression -> <empty>','revisar_expression',0,'p_revisar_expression','MyRParse.py',534),
  ('else_expression -> <empty>','else_expression',0,'p_else_expression','MyRParse.py',546),
  ('condition_end -> <empty>','condition_end',0,'p_condition_end','MyRParse.py',555),
  ('opera_while -> <empty>','opera_while',0,'p_opera_while','MyRParse.py',562),
  ('condicion_while -> <empty>','condicion_while',0,'p_condicion_while','MyRParse.py',567),
  ('loop_while -> <empty>','loop_while',0,'p_loop_while','MyRParse.py',579),
  ('opera_for -> <empty>','opera_for',0,'p_opera_for','MyRParse.py',589),
  ('compara_for -> <empty>','compara_for',0,'p_compara_for','MyRParse.py',594),
  ('condicion_for -> <empty>','condicion_for',0,'p_condicion_for','MyRParse.py',613),
  ('aumenta -> <empty>','aumenta',0,'p_aumenta','MyRParse.py',626),
  ('loop_for -> <empty>','loop_for',0,'p_loop_for','MyRParse.py',661),
  ('read_arg_mean -> <empty>','read_arg_mean',0,'p_read_arg_mean','MyRParse.py',671),
  ('read_arg_median -> <empty>','read_arg_median',0,'p_read_arg_median','MyRParse.py',680),
  ('read_arg_mode -> <empty>','read_arg_mode',0,'p_read_arg_mode','MyRParse.py',689),
  ('read_arg_varianza -> <empty>','read_arg_varianza',0,'p_read_arg_varianza','MyRParse.py',698),
  ('read_arg_esdev -> <empty>','read_arg_esdev',0,'p_read_arg_esdev','MyRParse.py',707),
  ('read_instr -> <empty>','read_instr',0,'p_read_instr','MyRParse.py',717),
  ('write_instr -> <empty>','write_instr',0,'p_write_instr','MyRParse.py',726),
  ('return_function -> <empty>','return_function',0,'p_return_function','MyRParse.py',736),
  ('return_save_quadruple -> <empty>','return_save_quadruple',0,'p_return_save_quadruple','MyRParse.py',745),
  ('end_main -> <empty>','end_main',0,'p_end_main','MyRParse.py',761),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAND CHAR CHARCTE COMMA COMMENT DIVIDE DO ELSE EQ FLOAT FLOATCTE FOR FUNCION GT GTE ID IF INT INTEGERCTE LBRACKET LPARENT LT LTE MAIN MINUS NE NEWLINE OR PLUS POWER PROGRAM RBRACKET READ RETURN RPARENT SEMI SIM THEN TIMES TO VAR VOID WHILE WRITEprograma : PROGRAM ID SEMI vars funcion main\n                | PROGRAM ID SEMI funcion main\n                | PROGRAM ID SEMI vars main\n                | PROGRAM ID SEMI mainmain : MAIN function_name verifica_name function_all end_mainvars : VAR list_varslist_vars : list_vars SEMI NEWLINE list_vars SEMI\n                 | list_vars COMMA ID vars_name vars_type SEMI\n                 | memType ID vars_name vars_typefunc_vars : memType ID vars_name vars_type param_type COMMA func_vars\n                 | memType ID vars_name vars_type param_typememType : INT loType\n               | FLOAT loType\n               | CHAR loTypefunction_all : LBRACKET vars statement_func RBRACKET\n                    | LBRACKET vars RBRACKET\n                    | LBRACKET statement_func RBRACKET\n                    | LBRACKET RBRACKETbloque : LBRACKET statement_func RBRACKET\n              | LBRACKET RBRACKETstatement_func : statement statement_func\n                      | statementstatement : statement_assign SEMI\n                 | statement_function SEMI\n                 | statement_condition SEMI\n                 | statement_while SEMI\n                 | statement_read SEMI\n                 | statement_write SEMIstatement_assign : ID const_id EQ opera_add expression add_tablaexpression : expr oper_y AND opera_add expression\n                  | expr oper_y expr : expr_aux oper_o OR opera_add expr\n            | expr_aux oper_o expr_aux : expr_sumres expr_rel LT opera_add expr_aux\n                | expr_sumres expr_rel LTE opera_add expr_aux\n                | expr_sumres expr_rel GT opera_add expr_aux\n                | expr_sumres expr_rel GTE opera_add expr_aux\n                | expr_sumres expr_rel SIM opera_add expr_aux\n                | expr_sumres expr_rel NE opera_add expr_aux\n                | expr_sumres expr_rel expr_sumres : expr_muldiv term_sumres PLUS opera_add expr_sumres\n                   | expr_muldiv term_sumres MINUS opera_add expr_sumres\n                   | expr_muldiv term_sumresexpr_muldiv : const term_muldiv TIMES opera_add expr_muldiv\n                   | const term_muldiv DIVIDE opera_add expr_muldiv\n                   | const term_muldiv POWER opera_add expr_muldiv\n                   | const term_muldivconst : LPARENT fondo_virtual expression RPARENT pop_fondo_virtual\n             | INTEGERCTE const_int\n             | FLOATCTE const_float\n             | CHARCTE const_char\n             | ID const_idfuncion : FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion funcion\n               | FUNCION memType ID function_name parametro rev_quad function_all fin_funcion funcion\n               | FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion\n               | FUNCION memType ID function_name parametro rev_quad function_all fin_funcionparametro : LPARENT func_vars RPARENT\n                 | LPARENT RPARENTstatement_function : ID existe_funcion crea_funcion LPARENT funcion_aux verifica_param RPARENT crea_subfuncion\n                          | ID existe_funcion crea_funcion LPARENT RPARENT crea_subfuncionfuncion_aux : expression revisar_parametro cuenta_parametro COMMA funcion_aux\n                   | expression revisar_parametrostatement_condition : IF LPARENT expression RPARENT THEN revisar_expression bloque ELSE else_expression bloque condition_end\n                           | IF LPARENT expression RPARENT THEN revisar_expression bloque condition_endstatement_while : WHILE opera_while LPARENT expression RPARENT condicion_while DO bloque loop_whilestatement_read : READ LPARENT read_1 RPARENTread_1 : ID read_instr read_1\n              | ID read_instrstatement_write : WRITE LPARENT write_1 RPARENTwrite_1 : ID write_instr write_1\n               | ID write_instrloType : vars_name : vars_type : const_id : const_int : const_float : const_char : add_tabla : opera_add : term_sumres : term_muldiv : expr_rel : oper_o : oper_y : fondo_virtual : pop_fondo_virtual : verifica_name : param_type : rev_quad : function_name : fin_funcion : existe_funcion : crea_funcion : crea_subfuncion : verifica_param : cuenta_parametro : revisar_parametro : revisar_expression : else_expression : condition_end : opera_while : condicion_while : loop_while : read_instr : write_instr : end_main : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,12,13,22,37,45,48,69,70,89,],[0,-4,-3,-2,-1,-107,-5,-18,-16,-17,-15,]),'ID':([2,14,15,16,17,18,19,20,24,25,26,27,28,29,34,38,41,46,49,61,67,72,73,74,75,76,77,80,82,83,84,90,92,103,105,107,111,112,113,126,128,138,139,140,141,142,143,144,145,146,147,148,149,150,162,163,164,165,166,167,168,169,170,171,172,173,174,181,198,],[3,-6,25,-72,-72,-72,-72,30,33,-73,-12,-13,-14,35,-74,56,-9,56,56,-7,88,-23,-24,-25,-26,-27,-28,102,105,107,-8,-80,-86,102,-105,-106,102,102,102,105,107,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,102,102,102,102,102,102,102,102,102,102,102,102,102,56,102,]),'SEMI':([3,14,25,33,34,39,40,41,50,51,52,53,54,55,61,62,84,94,95,96,97,98,99,100,101,102,115,116,117,118,119,120,121,122,123,125,127,132,134,156,158,160,177,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,197,200,202,203,206,207,208,209,],[4,23,-73,-73,-74,61,-74,-9,72,73,74,75,76,77,-7,84,-8,-85,-84,-83,-81,-82,-76,-77,-78,-75,-31,-33,-40,-43,-47,-49,-50,-51,-52,-66,-69,-79,-95,-29,-60,-87,-95,-48,-101,-30,-32,-34,-35,-36,-37,-38,-39,-41,-42,-44,-45,-46,-59,-64,-20,-104,-19,-65,-101,-63,]),'VAR':([4,38,],[8,8,]),'FUNCION':([4,5,14,25,34,41,48,61,69,70,84,86,89,108,109,129,],[9,9,-6,-73,-74,-9,-18,-7,-16,-17,-8,-92,-15,-92,9,9,]),'MAIN':([4,5,6,11,14,25,34,41,48,61,69,70,84,86,89,108,109,129,130,154,],[10,10,10,10,-6,-73,-74,-9,-18,-7,-16,-17,-8,-92,-15,-92,-56,-55,-54,-53,]),'INT':([8,9,32,44,176,],[16,16,16,16,16,]),'FLOAT':([8,9,32,44,176,],[17,17,17,17,17,]),'CHAR':([8,9,32,44,176,],[18,18,18,18,18,]),'VOID':([9,],[19,]),'LBRACKET':([10,21,31,43,63,64,66,85,87,137,161,195,199,205,],[-91,-88,38,-90,-90,38,-58,38,-57,-99,181,181,-100,181,]),'RBRACKET':([14,25,34,38,41,46,47,49,61,68,71,72,73,74,75,76,77,84,181,201,],[-6,-73,-74,48,-9,69,70,-22,-7,89,-21,-23,-24,-25,-26,-27,-28,-8,202,206,]),'IF':([14,25,34,38,41,46,49,61,72,73,74,75,76,77,84,181,],[-6,-73,-74,57,-9,57,57,-7,-23,-24,-25,-26,-27,-28,-8,57,]),'WHILE':([14,25,34,38,41,46,49,61,72,73,74,75,76,77,84,181,],[-6,-73,-74,58,-9,58,58,-7,-23,-24,-25,-26,-27,-28,-8,58,]),'READ':([14,25,34,38,41,46,49,61,72,73,74,75,76,77,84,181,],[-6,-73,-74,59,-9,59,59,-7,-23,-24,-25,-26,-27,-28,-8,59,]),'WRITE':([14,25,34,38,41,46,49,61,72,73,74,75,76,77,84,181,],[-6,-73,-74,60,-9,60,60,-7,-23,-24,-25,-26,-27,-28,-8,60,]),'COMMA':([14,25,34,39,41,61,84,88,94,95,96,97,98,99,100,101,102,110,115,116,117,118,119,120,121,122,123,131,135,155,159,160,178,179,182,183,184,185,186,187,188,189,190,191,192,193,194,],[24,-73,-74,24,-9,-7,-8,-73,-85,-84,-83,-81,-82,-76,-77,-78,-75,-74,-31,-33,-40,-43,-47,-49,-50,-51,-52,-89,-98,176,-97,-87,198,-48,-30,-32,-34,-35,-36,-37,-38,-39,-41,-42,-44,-45,-46,]),'NEWLINE':([23,61,],[32,32,]),'LPARENT':([30,35,36,42,56,57,58,59,60,79,80,81,90,91,92,103,111,112,113,138,139,140,141,142,143,144,145,146,147,148,149,150,162,163,164,165,166,167,168,169,170,171,172,173,174,198,],[-91,-91,44,44,-93,80,-102,82,83,-94,92,103,-80,112,-86,92,92,92,92,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'RPARENT':([44,65,88,93,94,95,96,97,98,99,100,101,102,104,105,106,107,110,112,115,116,117,118,119,120,121,122,123,124,126,128,131,133,135,136,152,153,155,157,159,160,179,182,183,184,185,186,187,188,189,190,191,192,193,194,196,204,],[66,87,-73,114,-85,-84,-83,-81,-82,-76,-77,-78,-75,125,-105,127,-106,-74,134,-31,-33,-40,-43,-47,-49,-50,-51,-52,151,-68,-71,-89,-96,-98,160,-67,-70,-11,177,-62,-87,-48,-30,-32,-34,-35,-36,-37,-38,-39,-41,-42,-44,-45,-46,-10,-61,]),'EQ':([56,78,],[-75,90,]),'INTEGERCTE':([80,90,92,103,111,112,113,138,139,140,141,142,143,144,145,146,147,148,149,150,162,163,164,165,166,167,168,169,170,171,172,173,174,198,],[99,-80,-86,99,99,99,99,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'FLOATCTE':([80,90,92,103,111,112,113,138,139,140,141,142,143,144,145,146,147,148,149,150,162,163,164,165,166,167,168,169,170,171,172,173,174,198,],[100,-80,-86,100,100,100,100,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'CHARCTE':([80,90,92,103,111,112,113,138,139,140,141,142,143,144,145,146,147,148,149,150,162,163,164,165,166,167,168,169,170,171,172,173,174,198,],[101,-80,-86,101,101,101,101,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'AND':([94,95,96,97,98,99,100,101,102,115,116,117,118,119,120,121,122,123,160,179,183,184,185,186,187,188,189,190,191,192,193,194,],[-85,-84,-83,-81,-82,-76,-77,-78,-75,138,-33,-40,-43,-47,-49,-50,-51,-52,-87,-48,-32,-34,-35,-36,-37,-38,-39,-41,-42,-44,-45,-46,]),'OR':([95,96,97,98,99,100,101,102,116,117,118,119,120,121,122,123,160,179,184,185,186,187,188,189,190,191,192,193,194,],[-84,-83,-81,-82,-76,-77,-78,-75,139,-40,-43,-47,-49,-50,-51,-52,-87,-48,-34,-35,-36,-37,-38,-39,-41,-42,-44,-45,-46,]),'LT':([96,97,98,99,100,101,102,117,118,119,120,121,122,123,160,179,190,191,192,193,194,],[-83,-81,-82,-76,-77,-78,-75,140,-43,-47,-49,-50,-51,-52,-87,-48,-41,-42,-44,-45,-46,]),'LTE':([96,97,98,99,100,101,102,117,118,119,120,121,122,123,160,179,190,191,192,193,194,],[-83,-81,-82,-76,-77,-78,-75,141,-43,-47,-49,-50,-51,-52,-87,-48,-41,-42,-44,-45,-46,]),'GT':([96,97,98,99,100,101,102,117,118,119,120,121,122,123,160,179,190,191,192,193,194,],[-83,-81,-82,-76,-77,-78,-75,142,-43,-47,-49,-50,-51,-52,-87,-48,-41,-42,-44,-45,-46,]),'GTE':([96,97,98,99,100,101,102,117,118,119,120,121,122,123,160,179,190,191,192,193,194,],[-83,-81,-82,-76,-77,-78,-75,143,-43,-47,-49,-50,-51,-52,-87,-48,-41,-42,-44,-45,-46,]),'SIM':([96,97,98,99,100,101,102,117,118,119,120,121,122,123,160,179,190,191,192,193,194,],[-83,-81,-82,-76,-77,-78,-75,144,-43,-47,-49,-50,-51,-52,-87,-48,-41,-42,-44,-45,-46,]),'NE':([96,97,98,99,100,101,102,117,118,119,120,121,122,123,160,179,190,191,192,193,194,],[-83,-81,-82,-76,-77,-78,-75,145,-43,-47,-49,-50,-51,-52,-87,-48,-41,-42,-44,-45,-46,]),'PLUS':([97,98,99,100,101,102,118,119,120,121,122,123,160,179,192,193,194,],[-81,-82,-76,-77,-78,-75,146,-47,-49,-50,-51,-52,-87,-48,-44,-45,-46,]),'MINUS':([97,98,99,100,101,102,118,119,120,121,122,123,160,179,192,193,194,],[-81,-82,-76,-77,-78,-75,147,-47,-49,-50,-51,-52,-87,-48,-44,-45,-46,]),'TIMES':([98,99,100,101,102,119,120,121,122,123,160,179,],[-82,-76,-77,-78,-75,148,-49,-50,-51,-52,-87,-48,]),'DIVIDE':([98,99,100,101,102,119,120,121,122,123,160,179,],[-82,-76,-77,-78,-75,149,-49,-50,-51,-52,-87,-48,]),'POWER':([98,99,100,101,102,119,120,121,122,123,160,179,],[-82,-76,-77,-78,-75,150,-49,-50,-51,-52,-87,-48,]),'THEN':([114,],[137,]),'DO':([151,175,],[-103,195,]),'ELSE':([180,202,206,],[199,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([4,38,],[5,46,]),'funcion':([4,5,109,129,],[6,11,130,154,]),'main':([4,5,6,11,],[7,12,13,22,]),'list_vars':([8,32,],[14,39,]),'memType':([8,9,32,44,176,],[15,20,15,67,67,]),'function_name':([10,30,35,],[21,36,42,]),'loType':([16,17,18,19,],[26,27,28,29,]),'verifica_name':([21,],[31,]),'vars_name':([25,33,88,],[34,40,110,]),'function_all':([31,64,85,],[37,86,108,]),'vars_type':([34,40,110,],[41,62,131,]),'parametro':([36,42,],[43,63,]),'end_main':([37,],[45,]),'statement_func':([38,46,49,181,],[47,68,71,201,]),'statement':([38,46,49,181,],[49,49,49,49,]),'statement_assign':([38,46,49,181,],[50,50,50,50,]),'statement_function':([38,46,49,181,],[51,51,51,51,]),'statement_condition':([38,46,49,181,],[52,52,52,52,]),'statement_while':([38,46,49,181,],[53,53,53,53,]),'statement_read':([38,46,49,181,],[54,54,54,54,]),'statement_write':([38,46,49,181,],[55,55,55,55,]),'rev_quad':([43,63,],[64,85,]),'func_vars':([44,176,],[65,196,]),'const_id':([56,102,],[78,123,]),'existe_funcion':([56,],[79,]),'opera_while':([58,],[81,]),'crea_funcion':([79,],[91,]),'expression':([80,103,111,112,113,162,198,],[93,124,132,135,136,182,135,]),'expr':([80,103,111,112,113,162,163,198,],[94,94,94,94,94,94,183,94,]),'expr_aux':([80,103,111,112,113,162,163,164,165,166,167,168,169,198,],[95,95,95,95,95,95,95,184,185,186,187,188,189,95,]),'expr_sumres':([80,103,111,112,113,162,163,164,165,166,167,168,169,170,171,198,],[96,96,96,96,96,96,96,96,96,96,96,96,96,190,191,96,]),'expr_muldiv':([80,103,111,112,113,162,163,164,165,166,167,168,169,170,171,172,173,174,198,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,192,193,194,97,]),'const':([80,103,111,112,113,162,163,164,165,166,167,168,169,170,171,172,173,174,198,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'read_1':([82,126,],[104,152,]),'write_1':([83,128,],[106,153,]),'fin_funcion':([86,108,],[109,129,]),'opera_add':([90,138,139,140,141,142,143,144,145,146,147,148,149,150,],[111,162,163,164,165,166,167,168,169,170,171,172,173,174,]),'fondo_virtual':([92,],[113,]),'oper_y':([94,],[115,]),'oper_o':([95,],[116,]),'expr_rel':([96,],[117,]),'term_sumres':([97,],[118,]),'term_muldiv':([98,],[119,]),'const_int':([99,],[120,]),'const_float':([100,],[121,]),'const_char':([101,],[122,]),'read_instr':([105,],[126,]),'write_instr':([107,],[128,]),'funcion_aux':([112,198,],[133,204,]),'param_type':([131,],[155,]),'add_tabla':([132,],[156,]),'verifica_param':([133,],[157,]),'crea_subfuncion':([134,177,],[158,197,]),'revisar_parametro':([135,],[159,]),'revisar_expression':([137,],[161,]),'condicion_while':([151,],[175,]),'cuenta_parametro':([159,],[178,]),'pop_fondo_virtual':([160,],[179,]),'bloque':([161,195,205,],[180,203,208,]),'condition_end':([180,208,],[200,209,]),'else_expression':([199,],[205,]),'loop_while':([203,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMI vars funcion main','programa',6,'p_programa','MyRParse.py',50),
  ('programa -> PROGRAM ID SEMI funcion main','programa',5,'p_programa','MyRParse.py',51),
  ('programa -> PROGRAM ID SEMI vars main','programa',5,'p_programa','MyRParse.py',52),
  ('programa -> PROGRAM ID SEMI main','programa',4,'p_programa','MyRParse.py',53),
  ('main -> MAIN function_name verifica_name function_all end_main','main',5,'p_main','MyRParse.py',57),
  ('vars -> VAR list_vars','vars',2,'p_vars','MyRParse.py',60),
  ('list_vars -> list_vars SEMI NEWLINE list_vars SEMI','list_vars',5,'p_list_vars','MyRParse.py',63),
  ('list_vars -> list_vars COMMA ID vars_name vars_type SEMI','list_vars',6,'p_list_vars','MyRParse.py',64),
  ('list_vars -> memType ID vars_name vars_type','list_vars',4,'p_list_vars','MyRParse.py',65),
  ('func_vars -> memType ID vars_name vars_type param_type COMMA func_vars','func_vars',7,'p_func_vars','MyRParse.py',68),
  ('func_vars -> memType ID vars_name vars_type param_type','func_vars',5,'p_func_vars','MyRParse.py',69),
  ('memType -> INT loType','memType',2,'p_memType','MyRParse.py',72),
  ('memType -> FLOAT loType','memType',2,'p_memType','MyRParse.py',73),
  ('memType -> CHAR loType','memType',2,'p_memType','MyRParse.py',74),
  ('function_all -> LBRACKET vars statement_func RBRACKET','function_all',4,'p_function_all','MyRParse.py',77),
  ('function_all -> LBRACKET vars RBRACKET','function_all',3,'p_function_all','MyRParse.py',78),
  ('function_all -> LBRACKET statement_func RBRACKET','function_all',3,'p_function_all','MyRParse.py',79),
  ('function_all -> LBRACKET RBRACKET','function_all',2,'p_function_all','MyRParse.py',80),
  ('bloque -> LBRACKET statement_func RBRACKET','bloque',3,'p_bloque','MyRParse.py',83),
  ('bloque -> LBRACKET RBRACKET','bloque',2,'p_bloque','MyRParse.py',84),
  ('statement_func -> statement statement_func','statement_func',2,'p_statement_func','MyRParse.py',87),
  ('statement_func -> statement','statement_func',1,'p_statement_func','MyRParse.py',88),
  ('statement -> statement_assign SEMI','statement',2,'p_statement','MyRParse.py',91),
  ('statement -> statement_function SEMI','statement',2,'p_statement','MyRParse.py',92),
  ('statement -> statement_condition SEMI','statement',2,'p_statement','MyRParse.py',93),
  ('statement -> statement_while SEMI','statement',2,'p_statement','MyRParse.py',94),
  ('statement -> statement_read SEMI','statement',2,'p_statement','MyRParse.py',95),
  ('statement -> statement_write SEMI','statement',2,'p_statement','MyRParse.py',96),
  ('statement_assign -> ID const_id EQ opera_add expression add_tabla','statement_assign',6,'p_statement_assign','MyRParse.py',99),
  ('expression -> expr oper_y AND opera_add expression','expression',5,'p_expression','MyRParse.py',102),
  ('expression -> expr oper_y','expression',2,'p_expression','MyRParse.py',103),
  ('expr -> expr_aux oper_o OR opera_add expr','expr',5,'p_expr','MyRParse.py',106),
  ('expr -> expr_aux oper_o','expr',2,'p_expr','MyRParse.py',107),
  ('expr_aux -> expr_sumres expr_rel LT opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',110),
  ('expr_aux -> expr_sumres expr_rel LTE opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',111),
  ('expr_aux -> expr_sumres expr_rel GT opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',112),
  ('expr_aux -> expr_sumres expr_rel GTE opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',113),
  ('expr_aux -> expr_sumres expr_rel SIM opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',114),
  ('expr_aux -> expr_sumres expr_rel NE opera_add expr_aux','expr_aux',5,'p_expr_aux','MyRParse.py',115),
  ('expr_aux -> expr_sumres expr_rel','expr_aux',2,'p_expr_aux','MyRParse.py',116),
  ('expr_sumres -> expr_muldiv term_sumres PLUS opera_add expr_sumres','expr_sumres',5,'p_expr_sumres','MyRParse.py',119),
  ('expr_sumres -> expr_muldiv term_sumres MINUS opera_add expr_sumres','expr_sumres',5,'p_expr_sumres','MyRParse.py',120),
  ('expr_sumres -> expr_muldiv term_sumres','expr_sumres',2,'p_expr_sumres','MyRParse.py',121),
  ('expr_muldiv -> const term_muldiv TIMES opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',124),
  ('expr_muldiv -> const term_muldiv DIVIDE opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',125),
  ('expr_muldiv -> const term_muldiv POWER opera_add expr_muldiv','expr_muldiv',5,'p_expr_muldiv','MyRParse.py',126),
  ('expr_muldiv -> const term_muldiv','expr_muldiv',2,'p_expr_muldiv','MyRParse.py',127),
  ('const -> LPARENT fondo_virtual expression RPARENT pop_fondo_virtual','const',5,'p_const','MyRParse.py',130),
  ('const -> INTEGERCTE const_int','const',2,'p_const','MyRParse.py',131),
  ('const -> FLOATCTE const_float','const',2,'p_const','MyRParse.py',132),
  ('const -> CHARCTE const_char','const',2,'p_const','MyRParse.py',133),
  ('const -> ID const_id','const',2,'p_const','MyRParse.py',134),
  ('funcion -> FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion funcion','funcion',10,'p_funcion','MyRParse.py',137),
  ('funcion -> FUNCION memType ID function_name parametro rev_quad function_all fin_funcion funcion','funcion',9,'p_funcion','MyRParse.py',138),
  ('funcion -> FUNCION VOID loType ID function_name parametro rev_quad function_all fin_funcion','funcion',9,'p_funcion','MyRParse.py',139),
  ('funcion -> FUNCION memType ID function_name parametro rev_quad function_all fin_funcion','funcion',8,'p_funcion','MyRParse.py',140),
  ('parametro -> LPARENT func_vars RPARENT','parametro',3,'p_parametro','MyRParse.py',143),
  ('parametro -> LPARENT RPARENT','parametro',2,'p_parametro','MyRParse.py',144),
  ('statement_function -> ID existe_funcion crea_funcion LPARENT funcion_aux verifica_param RPARENT crea_subfuncion','statement_function',8,'p_statement_function','MyRParse.py',147),
  ('statement_function -> ID existe_funcion crea_funcion LPARENT RPARENT crea_subfuncion','statement_function',6,'p_statement_function','MyRParse.py',148),
  ('funcion_aux -> expression revisar_parametro cuenta_parametro COMMA funcion_aux','funcion_aux',5,'p_funcion_aux','MyRParse.py',151),
  ('funcion_aux -> expression revisar_parametro','funcion_aux',2,'p_funcion_aux','MyRParse.py',152),
  ('statement_condition -> IF LPARENT expression RPARENT THEN revisar_expression bloque ELSE else_expression bloque condition_end','statement_condition',11,'p_statement_condition','MyRParse.py',158),
  ('statement_condition -> IF LPARENT expression RPARENT THEN revisar_expression bloque condition_end','statement_condition',8,'p_statement_condition','MyRParse.py',159),
  ('statement_while -> WHILE opera_while LPARENT expression RPARENT condicion_while DO bloque loop_while','statement_while',9,'p_statement_while','MyRParse.py',162),
  ('statement_read -> READ LPARENT read_1 RPARENT','statement_read',4,'p_statement_read','MyRParse.py',165),
  ('read_1 -> ID read_instr read_1','read_1',3,'p_read_1','MyRParse.py',168),
  ('read_1 -> ID read_instr','read_1',2,'p_read_1','MyRParse.py',169),
  ('statement_write -> WRITE LPARENT write_1 RPARENT','statement_write',4,'p_statement_write','MyRParse.py',172),
  ('write_1 -> ID write_instr write_1','write_1',3,'p_write_1','MyRParse.py',175),
  ('write_1 -> ID write_instr','write_1',2,'p_write_1','MyRParse.py',176),
  ('loType -> <empty>','loType',0,'p_loType','MyRParse.py',181),
  ('vars_name -> <empty>','vars_name',0,'p_vars_name','MyRParse.py',187),
  ('vars_type -> <empty>','vars_type',0,'p_vars_type','MyRParse.py',271),
  ('const_id -> <empty>','const_id',0,'p_const_id','MyRParse.py',298),
  ('const_int -> <empty>','const_int',0,'p_const_int','MyRParse.py',304),
  ('const_float -> <empty>','const_float',0,'p_const_float','MyRParse.py',315),
  ('const_char -> <empty>','const_char',0,'p_const_char','MyRParse.py',326),
  ('add_tabla -> <empty>','add_tabla',0,'p_add_tabla','MyRParse.py',339),
  ('opera_add -> <empty>','opera_add',0,'p_opera_add','MyRParse.py',353),
  ('term_sumres -> <empty>','term_sumres',0,'p_term_sumres','MyRParse.py',359),
  ('term_muldiv -> <empty>','term_muldiv',0,'p_term_muldiv','MyRParse.py',363),
  ('expr_rel -> <empty>','expr_rel',0,'p_expr_rel','MyRParse.py',367),
  ('oper_o -> <empty>','oper_o',0,'p_oper_o','MyRParse.py',371),
  ('oper_y -> <empty>','oper_y',0,'p_oper_y','MyRParse.py',375),
  ('fondo_virtual -> <empty>','fondo_virtual',0,'p_fondo_virtual','MyRParse.py',379),
  ('pop_fondo_virtual -> <empty>','pop_fondo_virtual',0,'p_pop_fondo_virtual','MyRParse.py',384),
  ('verifica_name -> <empty>','verifica_name',0,'p_verifica_name','MyRParse.py',411),
  ('param_type -> <empty>','param_type',0,'p_param_type','MyRParse.py',417),
  ('rev_quad -> <empty>','rev_quad',0,'p_rev_quad','MyRParse.py',423),
  ('function_name -> <empty>','function_name',0,'p_function_name','MyRParse.py',427),
  ('fin_funcion -> <empty>','fin_funcion',0,'p_fin_funcion','MyRParse.py',454),
  ('existe_funcion -> <empty>','existe_funcion',0,'p_existe_funcion','MyRParse.py',466),
  ('crea_funcion -> <empty>','crea_funcion',0,'p_crea_funcion','MyRParse.py',473),
  ('crea_subfuncion -> <empty>','crea_subfuncion',0,'p_crea_subfuncion','MyRParse.py',480),
  ('verifica_param -> <empty>','verifica_param',0,'p_verifica_param','MyRParse.py',486),
  ('cuenta_parametro -> <empty>','cuenta_parametro',0,'p_cuenta_parametro','MyRParse.py',493),
  ('revisar_parametro -> <empty>','revisar_parametro',0,'p_revisar_parametro','MyRParse.py',498),
  ('revisar_expression -> <empty>','revisar_expression',0,'p_revisar_expression','MyRParse.py',521),
  ('else_expression -> <empty>','else_expression',0,'p_else_expression','MyRParse.py',533),
  ('condition_end -> <empty>','condition_end',0,'p_condition_end','MyRParse.py',542),
  ('opera_while -> <empty>','opera_while',0,'p_opera_while','MyRParse.py',549),
  ('condicion_while -> <empty>','condicion_while',0,'p_condicion_while','MyRParse.py',554),
  ('loop_while -> <empty>','loop_while',0,'p_loop_while','MyRParse.py',566),
  ('read_instr -> <empty>','read_instr',0,'p_read_instr','MyRParse.py',576),
  ('write_instr -> <empty>','write_instr',0,'p_write_instr','MyRParse.py',586),
  ('end_main -> <empty>','end_main',0,'p_end_main','MyRParse.py',621),
]
